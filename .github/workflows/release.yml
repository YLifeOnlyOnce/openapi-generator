name: Release API Client

on:
  push:
    tags:
      - 'v*.*.*'  # 匹配 v1.0.0, v2.1.3 等格式的标签

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Get version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Tag version: $VERSION"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate API client and docs
      run: |
        # 设置版本号
        export npm_package_version=${{ steps.get_version.outputs.VERSION }}
        
        # 运行生成脚本（会自动调用post-generate.sh并更新版本）
        ./scripts/generate.sh
        
    - name: Build client
      run: |
        cd generated/client
        npm run build
        
    - name: Run tests (if any)
      run: |
        cd generated/client
        npm test || echo "No tests found, skipping..."
        
    - name: Get package name
      id: get_package_name
      run: |
        cd generated/client
        PACKAGE_NAME=$(node -p "require('./package.json').name")
        echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        echo "Package name: $PACKAGE_NAME"
        
    - name: Publish to npm
      run: |
        cd generated/client
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release
      run: |
        gh release create ${{ github.ref_name }} \
          --title "Release ${{ steps.get_version.outputs.VERSION }}" \
          --notes "## Changes in this Release
          
          - Generated API client version ${{ steps.get_version.outputs.VERSION }}
          - Updated from OpenAPI specification
          
          ## Installation
          
          \`\`\`bash
          npm install ${{ steps.get_package_name.outputs.PACKAGE_NAME }}@${{ steps.get_version.outputs.VERSION }}
          \`\`\`
          
          ## Documentation
          
          See the [API Documentation](https://github.com/${{ github.repository }}/tree/${{ github.ref }}/generated/docs) for detailed usage information."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: api-documentation
        path: generated/docs/
        
    - name: Upload client artifacts
      uses: actions/upload-artifact@v4
      with:
        name: api-client
        path: generated/client/dist/